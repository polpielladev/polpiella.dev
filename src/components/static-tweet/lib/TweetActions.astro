---
import type { Tweet } from '../types'
import { getLikeUrl, getReplyUrl, formatNumber } from '../utils'
// import { TweetActionsCopy } from './tweet-actions-copy'
// import s from './tweet-actions.module.css'

export interface Props {
  tweet: Tweet
}

const { tweet } = Astro.props
const favoriteCount = formatNumber(tweet.favorite_count)
---

<div class="actions">
  <a
    href={getLikeUrl(tweet)}
    class="like"
    target="_blank"
    rel="noopener noreferrer"
    aria-label={`Like. This Tweet has ${favoriteCount} likes`}>
    <div class="likeIconWrapper">
      <svg class="likeIcon" viewBox="0 0 24 24" aria-hidden="true">
        <g>
          <path
            d="M20.884 13.19c-1.351 2.48-4.001 5.12-8.379 7.67l-.503.3-.504-.3c-4.379-2.55-7.029-5.19-8.382-7.67-1.36-2.5-1.41-4.86-.514-6.67.887-1.79 2.647-2.91 4.601-3.01 1.651-.09 3.368.56 4.798 2.01 1.429-1.45 3.146-2.1 4.796-2.01 1.954.1 3.714 1.22 4.601 3.01.896 1.81.846 4.17-.514 6.67z"
          ></path>
        </g>
      </svg>
    </div>
    <span class="likeCount">
      {favoriteCount}
    </span>
  </a>
  <a
    href={getReplyUrl(tweet)}
    class="reply"
    target="_blank"
    rel="noopener noreferrer"
    aria-label="Reply to this Tweet on Twitter">
    <div class="replyIconWrapper">
      <svg viewBox="0 0 24 24" aria-hidden="true" class="replyIcon">
        <g>
          <path
            d="M1.751 10c0-4.42 3.584-8 8.005-8h4.366c4.49 0 8.129 3.64 8.129 8.13 0 2.96-1.607 5.68-4.196 7.11l-8.054 4.46v-3.69h-.067c-4.49.1-8.183-3.51-8.183-8.01z"
          ></path>
        </g>
      </svg>
    </div>
    <span class="replyText"> Reply</span>
  </a>
  {/* <TweetActionsCopy tweet={tweet} /> */}
</div>

<style>
  .actions {
    display: flex;
    align-items: center;
    color: var(--tweet-font-color-secondary);
    padding-top: 0.25rem;
    margin-top: 0.25rem;
    border-top: var(--tweet-border);
    overflow-wrap: break-word;
    white-space: nowrap;
    text-overflow: ellipsis;
  }

  .like,
  .reply,
  .copy {
    text-decoration: none;
    color: inherit;
    display: flex;
    align-items: center;
    margin-right: 1.25rem;
  }
  .like:hover,
  .reply:hover,
  .copy:hover {
    background-color: rgba(0, 0, 0, 0);
  }
  .like:hover > .likeIconWrapper {
    background-color: var(--tweet-color-red-primary-hover);
  }
  .like:hover > .likeCount {
    color: var(--tweet-color-red-primary);
    text-decoration-line: underline;
  }
  .likeIconWrapper,
  .replyIconWrapper,
  .copyIconWrapper {
    width: 32px;
    height: 32px;
    display: flex;
    justify-content: center;
    align-items: center;
    margin-left: -0.25rem;
    border-radius: 9999px;
  }
  .likeIcon,
  .replyIcon,
  .copyIcon {
    height: 1.25em;
    fill: currentColor;
    user-select: none;
  }
  .likeIcon {
    color: var(--tweet-color-red-primary);
  }
  .likeCount,
  .replyText,
  .copyText {
    font-size: 0.875rem;
    font-weight: 700;
    line-height: 1rem;
    margin-left: 0.25rem;
  }

  .reply:hover > .replyIconWrapper {
    background-color: var(--tweet-color-blue-secondary-hover);
  }
  .reply:hover > .replyText {
    color: var(--tweet-color-blue-secondary);
    text-decoration-line: underline;
  }
  .replyIcon {
    color: var(--tweet-color-blue-primary);
  }

  .copy {
    font: inherit;
    background: none;
    border: none;
    cursor: pointer;
  }
  .copy:hover > .copyIconWrapper {
    background-color: var(--tweet-color-green-primary-hover);
  }
  .copy:hover .copyIcon {
    color: var(--tweet-color-green-primary);
  }
  .copy:hover > .copyText {
    color: var(--tweet-color-green-primary);
    text-decoration-line: underline;
  }
</style>
